- name: Install and configuration postgre
  hosts: all
  become: yes
  tasks:
    - name: Check PV directory
      file:
        path: "{{ PV_DIR }}"
        state: directory
    - name: Install repo necessary packages
      apt:
        package:
          - pip
        state: present
        update_cache: true
    - name: install pre-requisites
      pip:
        name:
          - pyyaml
          - kubernetes 
    - name: Create namespace for postgresql
      kubernetes.core.k8s:
        kubeconfig: "{{ KUBECONFIG }}"
        name: "{{ NAMESPACE }}"
        api_version: v1
        kind: Namespace
        state: present
    - name: Create local-storage storageClassName 
      kubernetes.core.k8s:
        kubeconfig: "{{ KUBECONFIG }}"
        state: present
        definition:
          apiVersion: v1
          kind: StorageClass
          metadata:
            name: local-storage
          provisioner: kubernetes.io/no-provisioner
          volumeBindingMode: WaitForFirstConsumer
          reclaimPolicy: Delete
    - name: Create PV for postgresql
      kubernetes.core.k8s:
        kubeconfig: "{{ KUBECONFIG }}"
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: pv-local-mount
          spec:
            capacity:
              storage: "{{ CAPACITY }}"
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            persistentVolumeReclaimPolicy: Retain
            storageClassName: local-storage
            local:
              path: "{{ PV_DIR }}"
            nodeAffinity:
              required:
                nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/os
                      operator: In
                      values:
                      - linux
    - name: Create PVC for postgresql
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ KUBECONFIG }}"
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            namespace: "{{ NAMESPACE }}"
            name: postgresql
          spec:
              volumeMode: Filesystem
              storageClassName: local-storage
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: "{{ CAPACITY }}"
    - name: Add stable chart repo
      kubernetes.core.helm_repository:
        name: bitnami 
        repo_url: "https://charts.bitnami.com/bitnami"
    - name: Deploy latest version of PostgreSQL chart inside Postgresql namespace (and create it)
      kubernetes.core.helm:
        name: "{{ NAME }}"
        chart_ref: bitnami/postgresql
        release_namespace: "{{ NAMESPACE }}"
        kubeconfig: "{{ KUBECONFIG }}"
        values: 
          global:
            postgresql:
              auth:
                postgresPassword: "{{ ADMIN_PASSWORD }}"
            storageClass: local-storage
          primary:
            initdb:
              scripts: 
                init.sql: "{{ INIT_SQL }}"
            persistence:
              storageClass: local-storage
              size: "{{ CAPACITY }}"      
    - name: Deploy node app
      kubernetes.core.helm:
        name: "nodeapp"
        chart_ref: "/home/k8s/ansible/nodeapp"
        release_namespace: "{{ NAMESPACE }}"
        kubeconfig: "{{ KUBECONFIG }}"
        values:
          ingress:
            className: "nginx"
          secretData:
            PG_DB: "my_db"
            PG_HOST: "test-postgresql"
            PG_PASSWORD: "12345678"
            PG_PORT: 5432
            PG_USERNAME: "my_app"